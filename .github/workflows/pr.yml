#
# SPDX-License-Identifier: Apache-2.0
#
---
name: Pull Request
on:
  pull_request:
  workflow_dispatch: {}

jobs:
  # Lint, Compile and Core Function Tests
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Run Go formatters and linters
        run: make lint
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Fabric dependencies
        run: |
          sudo mkdir -p /opt/fabric
          pushd /opt/fabric
          curl -sSL https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh | bash -s -- binary --fabric-version 2.5.10 --ca-version 1.5.13
          popd
          cd builders/java
          sudo mvn -q dependency:copy-dependencies -DoutputDirectory=/opt/fabric-chaincode-java/lib
          npm install -g fabric-shim@2.5.7
      - name: Run Go formatters and linters
        run: make lint
      - name: Run Go unit tests
        run: make unit
      - name: Run Go integration tests
        run: |
          export PATH="/opt/fabric/bin:${PATH}"
          export FABRIC_CFG_PATH=/opt/fabric/config

          make integration
      - name: Run ShellCheck
        run: shellcheck $(ls builders/*/bin/* -1 | grep -v ccaas)

  fvt:
    name: Functional Tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup Fabric
        run: |
          curl -sSL https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh | bash -s -- binary

          # set the path and cfg env var for the rest of the step
          echo "FABRIC_CFG_PATH=$GITHUB_WORKSPACE/config" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Build Docker image
        id: dockerbuild
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile2
          platforms: linux/amd64
          push: false
          load: true
          tags: dev-microfab

      - name: Run against image
        run: |
          docker images
          ./scripts/test-container.sh
        env:
          MICROFAB_IMAGE: dev-microfab
